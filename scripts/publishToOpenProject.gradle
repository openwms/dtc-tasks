buildscript {
    repositories {
        mavenCentral()
        maven {
            credentials {
                username mavenUsername
                password mavenPassword
            }
            url mavenRepository
        }
    }
    dependencies {
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    }
}


import java.sql.Driver

//tag::publishToOpenProject[]
task publishToOpenProject(
        description: 'Publish contents as markdown to OpenProject',
        group: 'docToolchain'
) {

    doLast {
        def configFile = new File(docDir, mainConfigFile)
        def config = new ConfigSlurper().parse(configFile.text)

        Map dbConnParams = [
                url: config.openproject.jdbcurl,
                user: config.openproject.user,
                password: config.openproject.password,
                driver: config.openproject.driver
        ]

        Map params = [
                projectId: config.openproject.projectId,
                wikiId: config.openproject.wikiId,
                parentPageId: config.openproject.parentPageId,
        ]

        def props = new Properties()
        props.setProperty("user", dbConnParams.user)
        props.setProperty("password", dbConnParams.password)

        def driver = Class.forName(dbConnParams.driver).newInstance() as Driver
        def conn = driver.connect(dbConnParams.url, props) // <3>
        def sql1 = new groovy.sql.Sql(conn)
        try {
            def result = sql1.rows("SELECT * FROM PROJECTS WHERE ID = :projectId", projectId: params.projectId)
            if (result.empty) {
                println("Project with id ["+params.projectId+"] not found")
                System.exit(1)
            }
            result.each{ rs ->
                println(rs)
                print(rs.name)
            }
        } finally {
            sql1.close()
            conn.close()
        }
    }
}
//end::publishToOpenProject[]
