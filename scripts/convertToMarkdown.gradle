import static groovy.io.FileType.*
import static groovy.io.FileVisitResult.*

//tag::convertToMarkdown[]
task convertToMarkdown (
        group: 'docToolchain',
        description: 'converts file to .md via pandoc. Needs pandoc installed.',
) {
    doLast {
        File sourceFolder = new File("${targetDir}/docbook")
        sourceFolder.traverse(
                type: FILES,
        ) {
            if (it.name ==~ '^.*[.](xml)$') {
                def sourcePath = it.path.replace('.adoc', '.xml')
                def targetFile = sourcePath.replace('.xml', '.md').replace('docbook/', 'md/')
                new File("$targetFile").getParentFile().getAbsoluteFile().mkdirs()
                exec {
                    commandLine 'pandoc', '-f', 'docbook', "-t","markdown_mmd", "-o","${targetFile}", "${sourcePath}"
                }
            } else {
                File srcFile = new File(it.canonicalPath)
                File target = new File(it.parent.replace('/docbook/', '/md/'))
                println "Copying resource from ${it.canonicalPath} to ${target.canonicalPath}"
                copy {
                    from srcFile
                    into target
                }
            }
        }
    }
}
//end::convertToMarkdown[]

project.afterEvaluate {
    project.tasks.convertToMarkdown.dependsOn convertToDocBook
}
